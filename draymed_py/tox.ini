[tox]
skipsdist = true
envlist = lint,py38
source_package = draymed
all_sources = {[tox]source_package} tests/

[flake8]
max-line-length = 100

[mypy]
namespace_packages=True
ignore_missing_imports=False
disallow_untyped_defs=True

[testenv]
envdir = {toxworkdir}/py38

commands = poetry install -v
           black --check {[tox]source_package} tests/
           isort {[tox]source_package} tests/ --check-only
           mypy --config-file {toxinidir}/tox.ini {[tox]source_package}
           bandit -r {[tox]source_package} -lll
           safety check
           coverage run --source {[tox]source_package} -m py.test
           coverage report
           coverage xml -i -o coverage-reports/coverage.xml
allowlist_externals =
        bandit
        bash
        black
        coverage
        isort
        mypy
        poetry
        python
        safety
        true
list_dependencies_command = true


[testenv:lint]
description = Run black, isort, and mypy to clean up source files
commands =
       black {[tox]all_sources}
       isort --profile black {[tox]all_sources}
       mypy --config-file tox.ini {[tox]source_package} tests/

[testenv:debug]
description = Run last failing unit test and invoke debugger on errors
commands =
    pytest --lf --pdb

[testenv:update]
description = Update poetry lock files
commands = poetry update
